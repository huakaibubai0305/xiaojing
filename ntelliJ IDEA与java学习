ntelliJ IDEA 下的svn配置及使用的非常详细的图文总结：https://blog.csdn.net/qq_27093465/article/details/74898489
ntelliJ IDEA运行你的第一个java程序：https://blog.csdn.net/nextljp/article/details/77949597

java关键字区分大小写，java结尾的封号为英文版封号

Java变量的类型：
基本数据类型（基本数据类型变量存的是数据本身）和引用类型变量（存的是保存数据的空间地址）
String name="爱慕课"; 姓名为多个字符，可以使用 String 类型
char sex='男'; 性别为单个字符，可以使用 char 类型
          注意：String是字符串，char是字符。你可以想做字符串比字符字数要多所以要用双引号
int num=18; 
double price=120.5;
boolean isOK=true; “确定要关闭程序吗”的值为是或否，表示逻辑上的真或假，所以使用 boolean 类型

java常量的应用：
语法：final 常量名=值  eg. final char SEX='男';  注意：常量名一般用大写字符

java注释
/这是注释/  单行注释   /* 这是注释 */多行注释

java的自增（++）和自减（--）：a=5
int b = a++;可以认为第一种是先将a=5这个值赋值给b，然后在做a++的自增运算。所以输出a为6，b为5
int b = ++a;先做完a的自增运算在将自增完成的结果值6赋值给b。所以输出a为6，b为6
b=--a是a先自减然后赋给b；b=a--是a先赋值给b，然后自减；比如int a=24;int b=--a;那么a=23,b=23;int a=24;int b=a--;那么a=23,b=24;

if语句格式：嵌套语句
public class tes07 {
    public static void main(String[] args) {
        int score = 94;
        String sex = "女";
        if (score >= 80) {
            if (sex.equals("女")) {
                System.out.println("进入女子组决赛");
            } else {
                System.out.println("进入男子组决赛");
            }
        }
        else  System.out.println("未进入组决赛");
        }
    }
    
   if 后小括号里必须是一个条件表达式，结果为布尔值，如果为 true ，则执行后面大括号中的代码，如果为 false ，则不执行
    
   switch语句：
   执行过程：当 switch 后表达式的值和 case 语句后的值相同时，从该位置开始向下执行，直到遇到 break 语句或者 switch 语句块结束；
   如果没有匹配的 case 语句则执行 default 块的代码。
   public static void main(String[] args) {
        char today = '日';
        switch (today) {
            case '一':
            case '三':
            case '五':
                System.out.println("吃包子");
                break;
            case '二':
            case '四':
            case '六':
                System.out.println("吃油条");
                break;
            case '日':
                System.out.println("吃主席套餐");
                break;

Java循环语句:while 、 do...while 、 for
while 先判断，后执行
while（判断语句）{
    循环操作
}

do...while 先执行，后判断，至少被执行一次，知道循环条件不成立为止
do {
    循环操作
}while（判断语句） 

for（循环变量初始化；循环条件；循环变量变化）{
    循环操作
}
<1>、 执行循环变量初始化部分，设置循环的初始状态，此部分在整个循环中只执行一次
<2>、 进行循环条件的判断，如果条件为 true ，则执行循环体内代码；如果为 false ，则直接退出循环
<3>、 执行循环变量变化部分，改变循环变量的值，以便进行下一次条件判断
<4>、 依次重新执行< 2 >、< 3 >、< 4 >，直到退出循环
public class HelloWorld {
    public static void main(String[] args) {
		int sum = 0; // 保存不能被3整除的数之和
		// 循环变量 i 初始值为 1 ,每执行一次对变量加 1，只要小于等于 100 就重复执行循环
		for (int i = 1; i<=100 ; i++ ) {
			// 变量 i 与 3 进行求模（取余），如果不等于 0 ，则表示不能被 3 整除
			if (i % 3 != 0) { 
				sum = sum + i; // 累加求和
			}
		}
		System.out.println("1到100之间不能被3整除的数之和为：" + sum);
	}
}


类和对象：
类是模子，确定对象将会拥有的特征（属性）和行为，特点：类是对象的类型（这是重点，记住），具有相同属性和方法的一组对象的集合
属性：对象拥有的各种特征（有什么）
方法：对象执行的操作（能干什么）
类是抽象的概念，对象是实体

一：定义类：
1.定义类名 public class 类名{}
2.编写类的属性 属性的类型 属性名称；
3.编写类的方法
eg:
public class Telphone {
    //2属性（成员变量）有什么
    float screen;
    float cpu;
    float mem;
    //3方法 干什么
    void call(){
        System.out.println("具有打电话的功能");
    }
    void sendMessage(){
        System.out.println("screen:"+screen+"cpu:"+cpu+"mem:"+mem+"Telphone有发短信的功能");
    }
}

二：使用对象步骤：使用就是实例化
1.创建对象：
类名 对象名 = new 类名（）；因为类是对象的类型，所以类名在对象名之前
Telphone phone = new Telphone();
2.使用对象：
引用对象的属性：对象名.属性
phone.screen = 5;//给screen属性赋值5
引用对象的方法：对象名.方法名（）
phone.sendMessage();//调用sendMessage()方法

public class InitailTelphone {
    public static void main(String[]args){
        Telphone phone = new Telphone();
        phone.sendMessage();
        //给砬变量赋值
        phone.screen=5f;
        phone.cpu=1.4f;
        phone.mem=2.0f;
        //调用对象的方法
        phone.sendMessage();
    }
}

三、成员变量和局部变量（成员属性和方法内的局部属性）
1.成员变量 在类中定义用来描述对象将要有什么，被本类的所有方法使用，也可以被其他类的方法使用
2.局部变量 在类的方法中定义，在方法中临时保存数据

成员变量和局部变量区别
1.作用域不同：局部变量的作用域仅限于定义它的方法 成员变量的作用域在整个类内部都是可见的
2.初始值不同：java会给成员变量一个初始值，不会给局部变量一个初始值
3.在同一个方法中，不允许变量同名，不同方法中则可
4.成员变量和局部变量重名时，局部变量具有更高的优先级


四、构造方法：
1.使用new+构造方法 创建一个新的对象
Telphone phone = new Telphone();
2.构造方法是定义在java类中的一个用来初始化对象的方法
构造方法与类同名且没有返回值
而普通方法是干什么

构造方法的语句格式：
public 构造方法名（）{
    //初始化代码
} 注意：构造方法名与类名相同 （）内可以指定参数，也可以不指定



